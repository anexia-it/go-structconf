// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/anexia-it/go-structconf/encoding (interfaces: Encoding)

package structconf

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Encoding interface
type MockEncoding struct {
	ctrl     *gomock.Controller
	recorder *_MockEncodingRecorder
}

// Recorder for MockEncoding (not exported)
type _MockEncodingRecorder struct {
	mock *MockEncoding
}

func NewMockEncoding(ctrl *gomock.Controller) *MockEncoding {
	mock := &MockEncoding{ctrl: ctrl}
	mock.recorder = &_MockEncodingRecorder{mock}
	return mock
}

func (_m *MockEncoding) EXPECT() *_MockEncodingRecorder {
	return _m.recorder
}

func (_m *MockEncoding) MarshalFrom(_param0 map[string]interface{}) ([]byte, error) {
	ret := _m.ctrl.Call(_m, "MarshalFrom", _param0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEncodingRecorder) MarshalFrom(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MarshalFrom", arg0)
}

func (_m *MockEncoding) UnmarshalTo(_param0 []byte, _param1 map[string]interface{}) error {
	ret := _m.ctrl.Call(_m, "UnmarshalTo", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockEncodingRecorder) UnmarshalTo(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UnmarshalTo", arg0, arg1)
}
